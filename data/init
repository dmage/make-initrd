#!/bin/sh -efu

trap 'echo ERROR $? && sleep 5' EXIT

[ -d /.initrd ] ||
	mkdir -p /.initrd

# Save kernel environment and init arguments
[ -f /.initrd/kernenv ] ||
	/bin/environ -q -u _,PWD,SHLVL > /.initrd/kernenv

# Create storage for init environment
:> /.initrd/initenv

# Backward compatibility
x=/sbin/init-bin
[ ! -x "$x" ] || exec "$x"

trap wait CHLD
trap : INT TSTP QUIT HUP

x=/etc/rc.d/rc.sysinit
[ ! -x "$x" ] || setsid "$x" ||:

lock=/tmp/rc.lock
lock()
{
	while ! mkdir -- "$lock" >/dev/null 2>&1; do
		sleep 0.1
	done
}

unlock()
{
	rmdir -- "$lock"
}

level=3
rc=
rc_pid=

while :; do
	[ -z "$rc" ] || {
		read -r level < /.initrd/telinit
	} 2>/dev/null ||:

	case "$level" in
		[0-6])
			[ "$rc" != "$level" ] ||
				continue

			rc="$level"

			lock
			{
				lock
				[ -z "$rc_pid" ] ||
					rm -f -- "$rc_pid"

				setsid /etc/rc.d/rc "$level" ||:
				unlock
			} &

			rc_pid="/.initrd/killall/$!"
			:>"$rc_pid"

			unlock
			;;
		9)
			lock
			exec /etc/rc.d/rc.sysexec "$@"
			;;
	esac
done
