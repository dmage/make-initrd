#!/bin/sh -eu

. sh-functions

cd "$rootdir"

mkdir $verbose -p -- \
	./.initrd/killall \
	./.initrd/uevent/queues \
	./dev \
	./etc/initrd \
	./etc/modprobe.d \
	./etc/sysconfig \
	./etc/udev/rules.d \
	./home/root \
	./"$kernel_modules_dir" \
	./lib/initrd \
	./lib/initrd/all \
	./lib/initrd/kmodules \
	./lib/initrd/post \
	./lib/initrd/pre \
	./lib/udev \
	./mnt \
	./root \
	./run \
	./proc \
	./sys \
	./tmp \
	./sbin \
	./var/lock/subsys \
	./var/log \
	./var/run \
	#

initrd-release

mkfifo ./.initrd/telinit
mkfifo ./.initrd/rdshell

for i in rc0 rc1 rc2 rc3 rc4 rc5 rc6 init; do
	mkdir -p "./etc/rc.d/$i.d"
	ln -s "rc.d/$i.d" "./etc/$i.d"
done

# No shell access inside initramfs by default.
printf 'RDSHELL_MODE=disable\n' >./etc/sysconfig/rdshell

for n in group gshadow passwd shadow; do
	:> ./etc/$n
done

[ -z "${PUT_DIRS-}"  ] || put-tree . $PUT_DIRS
[ -z "${PUT_FILES-}" ] || put-file . $PUT_FILES

for n in ${PUT_PROGS-}; do
	n="$(
		export PATH=/sbin:/usr/sbin:/usr/local/sbin:/lib/initrd/bin:/bin:/usr/bin:/usr/local/bin
		which --skip-alias --skip-functions --skip-dot --skip-tilde "$n"
	)"
	[ -z "$n" ] || put-file . $n
done

if [ -n "${LOCALBUILDDIR:+1}" ]; then
	tree=$(readlink -ev "$LOCALBUILDDIR")
	verbose "Copying '$tree' recursively (with force) ..."
	put-file -f -r "$tree" "." "$tree"
fi

:>>./etc/fstab

if [ ! -x ./bin/sh ]; then
	for n in bash dash mksh ash; do
		[ -x "./bin/$n" ] || continue
		verbose "Setting $n as /bin/sh ..."
		ln -s "$n" ./bin/sh
		break
	done
fi

if [ -f /etc/modprobe.conf ]; then
	verbose "Copying /etc/modprobe.conf ..."
	put-file . /etc/modprobe.conf
fi

for d in lib etc; do
	if [ -d "/$d/modprobe.d" ]; then
		verbose "Copying files from $d/modprobe.d ..."
		find -L "/$d/modprobe.d" \
				-name '*.conf' \
			-exec cp -aLt ./etc/modprobe.d -- '{}' '+'
	fi

	if [ -d "/$d/udev/initramfs-rules.d" ]; then
		verbose "Copying files from /$d/udev/initramfs-rules.d ..."
		find -L "/$d/udev/initramfs-rules.d" \
				-name '*.rules' \
			-exec cp -aLt ./etc/udev/rules.d -- '{}' '+'
	fi
done

for n in builtin order; do
	[ ! -f "$kernel_modules_dir/modules.$n" ] ||
		cp -aLt ./"$kernel_modules_dir" -- "$kernel_modules_dir/modules.$n"
done
